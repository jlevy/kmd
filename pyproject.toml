[tool.poetry]
name = "kmd"
# Keep this a dev version, as the dynamic versioning plugin is used for actual release versions:
version = "0.0.0.dev"
description = "An AI-native command line for modern workflows"
authors = ["Joshua Levy <joshua@cal.berkeley.edu>"]
readme = "README.md"
requires-poetry = ">=2.0"

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = "^1.5.0"

[tool.poetry.dependencies]
# TODO: Spacy is not working with Python 3.13.
# https://github.com/explosion/spaCy/issues/13658
python = ">=3.11,<3.13"
frontmatter-format = "^0.1.6"
regex = "^2024.11.6"
cachetools = "^5.5.0"
assertpy = "^1.1"
rich = "^13.9.4"
python-slugify = "^8.0.4"
inflect = "^7.5.0"
justext = "^3.0.1"
lxml-html-clean = "^0.4.0"
cssselect = "^1.2.0"
weasyprint = "^62.3"
jinja2 = "^3.1.5"
pygments = "^2.18.0"
humanize = "^4.11.0"
prompt-toolkit = "^3.0.48"
setproctitle = "^1.3.4"
tenacity = "^8.5.0"
lazyasd = "^0.1.4"
python-dotenv = "^1.0.1"
thefuzz = "^0.22.1"
ripgrepy = "^2.0.1"
send2trash = "^1.8.3"
pyperclip = "^1.9.0"
# python-magic is most current and works with libmagic on macOS and Linux.
# on Windows, python-magic-bin seems like the best option.
python-magic = {version = "^0.4.27", platform = "linux | darwin"}
python-magic-bin = {version = "^0.4.14", platform = "win32"}
opencv-python = "^4.10.0.84"
pydantic = "^2.10.4"
cydifflib = "^1.1.0"
marko = "^2.1.2"
requests = "^2.32.3"
pydub = "^0.25.1"
humanfriendly = "^10.0"
curl-cffi = "^0.7.3"
patch-ng = "^1.18.1"
inquirerpy = "^0.3.4"
colour = "^0.1.5"
scikit-image = "^0.24.0"
python-fasthtml = "^0.9.1"
fastapi = "^0.115.4"
uvicorn = "^0.32.0"
yt-dlp = "^2024.12.23"
# orjson pinned for now since 3.10.11 had install issues:
orjson = "3.10.10"
xonsh = "^0.19.0"
tiktoken = "^0.7.0"
scipy = "^1.15.0"
spacy = "^3.8.3"
litellm = "^1.56.9"
nlpia2-wikipedia = "^1.5.18"
chromadb = "^0.5.3"
llama-index-core = "^0.12.9"
llama-index-llms-openai = "^0.3.12"
llama-index-vector-stores-chroma = "^0.4.1"
llama-index-embeddings-openai = "^0.3.1"
openai = "^1.59.3"
deepgram-sdk = "^3.7.7"
firecrawl-py = "^1.8.0"
exa-py = "^1.7.1"
numexpr = "^2.10.2"
pathspec = "^0.12.1"
tldr = "^3.3.0"


[tool.poetry.group.dev.dependencies]
black = "^24.10.0"
pytest = "^8.3.4"
ruff = "^0.4.10"
usort = "^1.0.8.post1"
mypy = "^1.14.1"
codespell = "^2.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Auto-generated version for builds based on git tag or commit.
#
# Preferred styles of versioning (PEP 440 compliant):
#   1.2.3               (stable release)
#   1.2.3a4             (pre-release, no dash or dots)
#   1.2.3rc1            (release candidate)
#   1.2.3.dev4+abcdef12 (development build, .dev for dev releases and +commit hash)
#
# Tags with a "v" prefix (e.g., v1.2.3) or additional dots (e.g., v1.2.3.rc1) are recognized
# but normalized to the preferred style for distribution.
# See: https://sam.hooke.me/note/2023/08/poetry-automatically-generated-package-version-from-git-commit/
[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^v?(?P<base>\\d+\\.\\d+\\.\\d+)(-?((?P<stage>[a-zA-Z]+)\\.?(?P<revision>\\d+)?))?"
format-jinja = """
    {%- if distance == 0 -%}
        {{- base -}}
        {%- if stage -%}
            {{ stage }}{{ revision | default("") }}
        {%- endif -%}
    {%- else -%}
        {{- base }}.dev{{ distance }}+{{commit}}
    {%- endif -%}
"""

[tool.poetry.scripts]
kmd = "kmd.main:main"
lint = "devtools.lint:main"
test = "pytest:main"

[tool.black]
line-length = 100

[tool.ruff]
line-length = 100

[tool.ruff.lint]
ignore = ["E402", "E731", "E712"]

[tool.mypy]
disable_error_code = [
    "import-untyped",
]

[tool.codespell]
ignore-words-list = "iTerm,Numbe"
# skip = "foo.py,bar.py"


[tool.pytest.ini_options]
python_files = ["*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
testpaths = [
    "kmd",
    "tests",
]
norecursedirs = ["kmd/xontrib"]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore:.*deprecated.*",
    "ignore:.*Deprecation.*",
    "ignore::RuntimeWarning:xonsh.tools",
    "ignore::SyntaxWarning:pydub.utils",
    "ignore::UserWarning:pydantic",
]
# Dev convenience: Temporarily rename a file to a stash pattern to stop tracking it.
addopts = "--ignore-glob='stash.*' --ignore-glob='*.stash.*'"
